 literal notation (initiliazer notation) = common declaration using curly brackets

 Key value pair is a property name , seperated by a colon , and then a value. The property can
 be enclosed in quotation marks but not necessary as Javascript interprets it as a string. This will not apply
 to multi worded key names , in which quotes are needed .This practice should be avoided however and should be written as camelCase. 
 Console.log() is also an example of a "dot notation" The console is an object and the 'log' is it's property. console.log(typeof console);    // -> object --- console.log(typeof console.log);    // -> function

 If the property of an object is another object that has properties itself, this is called a nested property. 
 It's possible to add another property to an existing object by simply adding in another dot along with it's key values. 

 The property of an object can also be a function. A function that is the property of an object will be called a method. Just as the properties of objects describe their characteristics, methods can be treated as their characteristic behavior, or ways of changing the state of an object.

 Assigining an object with an empty new property returns an undefined typeof, rather than a not or null. This is also true when initiating a variable to an empty object.

 Bracket notations [] is useful for calculating expressions and also for multi worded keys. Example below:

 let contact = {
    "first name": "Ronald"
};
contact["first name"] = "Tim"; PASSED (bracket notation)
contact.first name = "Tim"; // FAILED (dot notation)
contact."first name" = "Tim";  FAILED (dot notation)