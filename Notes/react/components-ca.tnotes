- A component is a small, resuable chuck of code that is reponsiblefor rending some HTML and re-rendering it when data changes. 

*REVIEW*
</ func name> as opposed to curly brackets {}. {} only when assigned variables?

- ReactDOM import is typically imported from 'react-dom/client'. Be sure to not forget to add /client. The methods imported from 'react-dom' interacts with the DOM. Methods imported from 'react' do NOT interact with the DOM at all and does not engage directly with anything that isn't part of React
 
*The DOM is techincally used in React apps, however it is not a part of REACT. Methods imported from 'react' are only for pure React purposes such as creating components or writing JSX elements.

//import React from 'react;
// import ReactDOM from 'react-dom/client'

- Adding a parathensis () within an div element is OPITIONAL . It is not strictly required
- Components can be thought of as reusable chunks of Javascript functions that take some kind of input and return a React element.
- Functional components === Javascript functions

//For a very long time in React development, it was necessary to import React in your JavaScript files that used React components, but since React v17.0 it is no longer required

- Comments in JSX is similar to Javascript however they also need to be wrapped in curly brackets. {/* This is a JSX comment*/}

- In the past, React components were defined using Javascript classes but has now been replaced with Hooks. 
- Functional component names must begin with a capital unlike Javascript where camelCase is used. This style is called PascalCase and is how JSX tags are compiled. Capitalization indicates that is is a React comonent rather than an HTML tag

- import React from 'react'; === Creates a Javascript object that contains properties needed to make React function such as React.createElement();

- import ReactDOM from 'react-dom/client' creates another Javascript object. This object contains methods that help React interact with the DOM, such as ReactDOM.create();

- render method is the only method that must always be declased inside a component.
However, you do not always have to return an element inside the render() method and instead can return a Boolean or a null value

- React typically has two core files: App.js and index.js. App.js is the top level of the application and index.js is the entry point

- When importing a component be sure to always exclude the file name and add ./ before the function name.

*Steps for rendering:*
1. call createRoot() method to create a React root container for displaying conent. React apps typically have a single root DOM node, and everything inside is managed by React DOM. In other words, we give createRoot a DOM element to render in such as .getElementById or querySelector and React will take over managing the DOM inside it.
2

- Owl comonent object example:
 
import React from 'react';

const owl = {
  title: 'Excellent Owl',
  src: 'https://content.codecademy.com/courses/React/react_photo-owl.jpg'
};

// Define function in PascalCase. Wrap in parenths and brackets for variables. Dot notation for objects
function Owl(){
  return (
    <div>
      <h1>{owl.title}</h1>
      <img 
      src={owl.src}
      alt={owl.title}/>
    </div>
  );
};

export default Owl;


