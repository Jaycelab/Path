- React 18 introduced a new way of rendering , createRoot();

changes include:
1. import ReactDOM from 'react-dom/client'

2. Previouly used was 
 ReactDOM.render(navbar, document.getElementById("root"))
 
2a. NEW WAY OF WRITING 
 ReactDOM.createRoot(document.getElementById("root")).render(navbar)
// In summary, we are rearranging the arguments and adding the .render method inside createRoot

3. Another way of writing this is also assigning the root method to a variable. Example:

const root = ReactDOM.createRoot(doucment.getElementbyId("root"))
root.render(navbar)
- Remember to wrap the components in self closing brackets
*REVIEW*
My solution:
const root = ReactDOM.createRoot(document.getElementById("root"))
root.render(jsx)

Correct Solution:
const container = document.getElementById('app');
const root = createRoot(container);
root.render(jsx)
//created two variables


My Soulution:
ReactDOM.createRoot(document.getElementById('main')).render(main)

Correct Solution:
ReactDOM.createRoot(document.getElementById('app')).render(<main />)
//The reason why we should 'app' instead of main is because main is an HTML element in the index.html file with a id set to ="app". So when rendering we link the id name to the element that we want to render from

//The component that is being rendered is the functional component wrapped in a self closing tag